# -*- coding: utf-8 -*-
"""linreg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TooNvxyJ1jcG_kTwCt4WRhsnURlAxnMv
"""

import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
plt.style.use('bmh')
import yfinance as yf
yf.pdr_override() # <== that's all it takes :-)
from pandas_datareader import data as pdr
from sklearn.preprocessing import MinMaxScaler

df = pdr.DataReader('VZ', start='2013-09-01', end='2023-09-03')
df.head(4)

df.shape

plt.figure(figsize=(16,8))
plt.title('Verizon')
plt.xlabel('Days')
plt.ylabel('Close Price')
plt.plot(df['Close'])
plt.show()

df = df[['Close']]
df.tail(4)

future_days = 25
df['Prediction'] = df[['Close']].shift(-future_days)
df.tail(4)

X = np.array(df.drop(['Prediction'], 1))[:-future_days]
print(X)

y = np.array(df["Prediction"])[:-future_days]
print(y)

x_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.25)

lr = LinearRegression().fit(x_train, y_train)

x_future = df.drop(['Prediction'], 1)[:-future_days]
x_future = x_future.tail(future_days)
x_future = np.array(x_future)

lr_prediction = lr.predict(x_future)
print(lr_prediction)

predictions = lr_prediction
valid = df[X.shape[0]:]
valid['Predictions'] = predictions
plt.figure(figsize=(16,8))
plt.title("Linear reg model")
plt.xlabel('Days')
plt.ylabel('Closing price')
plt.plot(valid[['Close', 'Predictions']])
plt.legend(['Orig', 'Val', 'Pred'])
plt.show()

valid

rmse = np.sqrt(np.mean((predictions - y_test)**2 ))
rmse